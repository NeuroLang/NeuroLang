# List of example programs to display on the Neurolang web app.

# Top level keys should be keys of neurolang.utils.server.engines.NeurolangEngineConfiguration instances
# passed to the web app (see neurolang.utils.server.app:main).

# For each engine instance, a list of program examples can be specified, with fields
# - id : unique string id for the program
# - title : the string title describing the program
# - shortTitle : shorter string title used to link to the program in the menu
# - query : the neurolang program
# - description : markdown text describing the program
neurosynth:
  - id: "neuro1"
    title: "Coordinate-based meta-analysis (CBMA) on the Neurosynth database"
    shortTitle: "CBMA Single Term"
    query: |
      TermInStudy(term, study) :: (1 / (1 + exp(-300 * (tfidf - 0.001)))) :- TermInStudyTFIDF(term, tfidf, study)
      TermAssociation(term) :- SelectedStudy(study) & TermInStudy(term, study)
      Activation(x, y, z) :- SelectedStudy(s) & PeakReported(x, y, z, s)
      ActivationGivenTerm(x, y, z, PROB) :- Activation(x, y, z) // TermAssociation("emotion")
      ActivationGivenTermImage(agg_create_region_overlay(x, y, z, p)) :- ActivationGivenTerm(x, y, z, p)
    description: |
      In this example, we use the Neurosynth CBMA database (Yarkoni et al., 2011), consisting of 14,371 studies.
      We load the data from the Neurosynth database into tables in the Neurolang engine :
        * **PeakReported** is a relation, or tuple, that includes the peak coordinates (i, j, k) reported in each study.
        * **Study** is a relation, or tuple, with one variable corresponding to the *id* of each study.
        * **SelectedStudy** annotates each study with a probability equal to 1/N of it being chosen out of the whole dataset of size N.

      We write a probabilistic program to query the probability of a peak coordinate being reported by a study given that
      this study mentions a specific term (i.e. **emotion**).
  - id: "neuro2"
    title: "Coordinate-based meta-analysis (CBMA) on the Neurosynth database"
    shortTitle: "CBMA Multiple Terms"
    query: |
      TermInStudy(term, study) :: (1 / (1 + exp(-300 * (tfidf - 0.001)))) :- TermInStudyTFIDF(term, tfidf, study)
      TermAssociation(term) :- SelectedStudy(study) & TermInStudy(term, study)
      TermsToSelect("emotion")
      TermsToSelect("fear")
      Activation(x, y, z) :- SelectedStudy(s) & PeakReported(x, y, z, s)
      ActivationGivenTerm(x, y, z, t, PROB) :- Activation(x, y, z) // (TermAssociation(t) & TermsToSelect(t))
      ProbDistributions(agg_kde(t, p)) :- ActivationGivenTerm(x, y, z, t, p)
      ActivationGivenTermImage(t, agg_create_region_overlay(x, y, z, p)) :- ActivationGivenTerm(x, y, z, t, p)
    description: |
      This example is similar to the [CBMA Single Term](/neurosynth/neuro1) example but it showcases how to query multiple term associations.
  - id: "neuro3"
    title: "Coordinate-based meta-analysis (CBMA) with spatial prior smoothing"
    shortTitle: "CBMA Spatial Prior"
    query: |
      VoxelReported (x, y, z, study) :- PeakReported(x2, y2, z2, study) & Voxel(x, y, z) & (d == EUCLIDEAN(x, y, z, x2, y2, z2)) & (d < 4)
      TermInStudy(term, study) :: (1 / (1 + exp(-300 * (tfidf - 0.001)))) :- TermInStudyTFIDF(term, tfidf, study)
      TermAssociation(term) :- SelectedStudy(study) & TermInStudy(term, study)
      Activation(x, y, z) :- SelectedStudy(s) & VoxelReported(x, y, z, s)
      ActivationGivenTerm(x, y, z, PROB) :- Activation(x, y, z) // TermAssociation("emotion")
      ActivationGivenTermImage(agg_create_region_overlay(x, y, z, p)) :- ActivationGivenTerm(x, y, z, p)
    description: |
      This example illustrates how a spatial prior can be defined based on the distance between voxels 
      and foci in a coordinate-based meta-analysis database.

      Here, each voxel's probability of being reported by a study is calculated based on whether that particular study
      reports a focus (peak activation) near the voxel. The probability is defined based on how far from the focus that
      voxel happens to be.

destrieux:
  - id: "destrieux1"
    title: "Union of Destrieux atlas regions"
    shortTitle: "Union of atlas regions"
    query: |
      LeftRegion(s, r):- destrieux(s, r) & startswith("L", s)
      AnteriorOfCentralSulcus(s, r) :- LeftRegion(s, r) & anterior_of(r, ls) & destrieux("L S central", ls)
      SuperiorOfTemporalGyrus(s, r) :- LeftRegion(s, r) & superior_of(r, ts) & destrieux("L G temp sup Lateral", ts)
      RegionUnion(region_union(r)) :- AnteriorOfCentralSulcus(..., r)
    description: |
      In this example, we show how to select regions from the Destrieux et al. Atlas based on their cardinal positions.
      We create 3 new relations:
        * LeftRegion contains the regions of the left hemisphere, selected by name
        * AnteriorOfCentralSulcus contains the regions that are anterior of the **central sulcus (Rolando's fissure)**
        * SuperiorOfTemporalGyrus contains the regions that are superior of **lateral aspect of the superior temporal gyrus**
      
      We also showcase how to create and display the union of the regions in AnteriorOfCentralSulcus using the aggregate function `region_union`.
  - id: "destrieux2"
    title: "Sulcal Identification Query Example in Neurolang"
    shortTitle: "Sulcal identification"
    query: |
      LeftSulcus(name_, region) :- destrieux(name_, region) & startswith("L S", name_)
      LeftPrimarySulcusName("L S central")
      LeftPrimarySulcusName("L Lat Fis post")
      LeftPrimarySulcusName("L S pericallosal")
      LeftPrimarySulcusName("L S parieto occipital")
      LeftPrimarySulcusName("L S calcarine")
      LeftPrimarySulcusName("L Lat Fis ant Vertical")
      LeftPrimarySulcusName("L Lat Fis ant Horizont")
      LeftPrimarySulcus(name_, region) :- destrieux(name_, region) & LeftPrimarySulcusName(name_)
      LeftFrontalLobeSulcus(region) :- LeftSulcus(..., region) & anatomical_anterior_of(region, lscregion) & destrieux("L S central", lscregion) & anatomical_superior_of(region, llfavregion) & destrieux("L Lat Fis ant Vertical", llfavregion)
      LPrecentralSulcus(r) :- LeftFrontalLobeSulcus(r) & principal_direction(r, "SI") & ~exists(r2; LeftFrontalLobeSulcus(r2) & LeftFrontalLobeSulcus(r) & ~(r2 == r) & anatomical_posterior_of(r2, r))
    description: |
      In this example, we first caracterise some of the sulci in the Destrieux et al. Atlas. We characterise:
        * the left hemisphere primary sulci, by name
        * the left frontal lobe sulcus as those
          - anterior to Destrieux's left central sulcus
          - superior to Destrieux's left anterio-vertical section of the lateral fissure.

      We then identify the left precentral sulcus (PC) as:
        * belonging to the left frontal lobe
        * its principal direction is along the superior-inferior axis.
        * no other sulcus satisfying the same conditions is anterior to the PC.

